name: End-to-End Testing

on:
  pull_request_target:
    types: [opened, reopened, synchronize]
    branches:
      - master

jobs:
#   e2e_test_win:
#     runs-on: windows-latest

#     defaults:
#       run:
#         shell: bash

#     strategy:
#       matrix:
#         node-versions: ["16.17.1"]

#     steps:
#       - name: "Checkout Project"
#         uses: actions/checkout@v2

#       - name: Set env
#         run: |
#           cp ./build_configs/electron-builder.win.dev.json5 ./electron-builder.json5
#           rm -rf ./app/utils/crypto
#       - name: Setup NodeJS Environment ${{ matrix.node-versions }}
#         uses: actions/setup-node@v2
#         with:
#           node-version: ${{ matrix.node-versions }}

#       - name: 'Clone Private Repository'
#         uses: actions/checkout@v2
#         with:
#           repository: Future-Scholars/paperlib-crypto
#           token: ${{ secrets.CRYPTO_REPO_KEY }}
#           path: ./app/utils/crypto

#       - name: "Install Node Module"
#         run: |
#           node -v
#           npm install --force
#           npx playwright install --with-deps
#           npm install screenshot-desktop
#       - name: "Cleanup Env"
#         run: |
#           rm -rf C:\Users\runneradmin\Documents\paperlib
#           rm -rf C:\Users\runneradmin\AppData\Local\paperlib
#       - name: "End-to-End Testing"
#         run: npm run test:e2e-dev


#       - name: "Zip screenshots"
#         if: always()
#         uses: vimtor/action-zip@v1
#         with:
#           files: screenshots/
#           dest: screenshots.zip


#       - name: Install Oracle Cloud CLI
#         if: always()
#         run: |
#           pip install cffi
#           curl https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.ps1 --output install.ps1
#           powershell ./install.ps1 -AcceptAllDefaults
#           mkdir ~/.oci
#           echo ${{ secrets.OCI_CFG_DATA }} > config.secret
#           base64 --decode config.secret > config
#           mv config ~/.oci
#           echo ${{ secrets.OCI_KEY_DATA }} > oraclekey.cer.secret
#           base64 --decode oraclekey.cer.secret > oraclekey.cer
#           mv oraclekey.cer ~/.oci
#       - name: Upload to Oracle Storage
#         if: always()
#         run: |
#           ls ./
#           oci os object put --bucket-name ${{ secrets.OCI_OS_BUCKET }} --file './screenshots.zip' --namespace ${{ secrets.OCI_OS_NAMESPACE }} --force --name 'screenshots/screenshots.zip'
          
  e2e_test_linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-versions: ["16.17.1"]

    steps:
      - name: "Checkout Project"
        uses: actions/checkout@v2

      - name: Set env
        run: |
          cp ./build_configs/electron-builder.linux.dev.json5 ./electron-builder.json5
          rm -rf ./app/utils/crypto
          sudo apt-get update
          sudo apt-get install -y imagemagick
          sudo apt-get install -y x11-xserver-utils
          sudo apt-get install -y libsecret-1-dev
          sudo apt-get install -y gnome-keyring
          export DISPLAY=:99.0; sh -e sudo systemctl start xvbf; sleep 3;
          export NO_AT_BRIDGE=1
          dbus-launch --sh-syntax

      - name: Setup NodeJS Environment ${{ matrix.node-versions }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-versions }}

      - name: 'Clone Private Repository'
        uses: actions/checkout@v2
        with:
          repository: Future-Scholars/paperlib-crypto
          token: ${{ secrets.CRYPTO_REPO_KEY }}
          path: ./app/utils/crypto

      - name: "Install Node Module"
        run: |
          node -v
          npm install --force
          npx playwright install --with-deps
          npm install screenshot-desktop -D
          
      - name: "Cleanup Env"
        run: |
          rm -rf ~/Documents/paperlib
          rm -rf ~/.config/paperlib

      - name: "End-to-End Testing"
        run: xvfb-run --auto-servernum --server-args="-screen 0 1920x1080x24" -- "export NO_AT_BRIDGE=1 && dbus-launch --sh-syntax && echo -n "" | /usr/bin/gnome-keyring-daemon --login && /usr/bin/gnome-keyring-daemon --components=secrets --start && npm run test:e2e-dev"

      - name: "Print Log"
        if: always()
        run: cat ~/.config/paperlib/logs/renderer.log

      - name: "Zip screenshots"
        if: always()
        uses: vimtor/action-zip@v1
        with:
          files: screenshots/
          dest: screenshots.zip

      - name: Install Oracle Cloud CLI
        if: always()
        run: |
          curl -L -O https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
          bash ./install.sh --accept-all-defaults
          mkdir ~/.oci
          echo -n ${{ secrets.OCI_CFG_DATA }} | base64 --decode > config
          mv config ~/.oci
          echo -n ${{ secrets.OCI_KEY_DATA }} | base64 --decode > oraclekey.cer
          mv oraclekey.cer ~/.oci
          
      - name: Upload to Oracle Storage
        if: always()
        run: |
          ls ./
          ~/bin/oci os object put --bucket-name ${{ secrets.OCI_OS_BUCKET }} --file './screenshots.zip' --namespace ${{ secrets.OCI_OS_NAMESPACE }} --force --name 'screenshots/screenshots.zip'
          
